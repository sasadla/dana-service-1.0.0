uses ws.forms.FileFormField

uses Core
uses ChainSwitch

component provides ws.Web requires ws.FormParser fparser, io.Output out, os.SystemInfo info, os.Run run, io.File, data.StringUtil stringUtil, net.http.HTTPRequest rq, data.query.Search search,composition.RecursiveLoader Rloader,Loader ldr, composition.Adapter adapter{
	bool Web:get(char path[], DocStream s)
    {
		
		init()
		
		char v_Chained[] = get_var_name("CHAINED")
		char v_Message[] = get_var_name("MESSAGE")
		
		
		LoadedComponents rnr = Rloader.load("Core.o")
		
		IDC myComponent = rnr.mainComponent
		LoadedComponents variantA = Rloader.load("ChainSwitch.o")
		LoadedComponents variantB = Rloader.load("ChainSwitchB.o")
 
		//bind our required interface to its initial configuration
		Core myObject = new Core() from myComponent
	
			if (v_Chained == null){
				adapter.adaptRequiredInterface(myComponent, "ChainSwitch", variantB.mainComponent)
				myObject.call(s,v_Chained,v_Message)
			
			}
			else{
				adapter.adaptRequiredInterface(myComponent, "ChainSwitch", variantA.mainComponent)
				myObject.call(s,v_Chained,v_Message)
			}
			
			

			return true
         }

		void init(){
		
			RunStatus s = run.execute("dnc ChainSwitch.dn")
			s = run.execute("dnc ChainSwitchB.dn")
			s = run.execute("dnc Core.dn")
						
		} 
		
		bool Web:post(char path[], char contentType[], byte content[], DocStream stream)
         {
			return true
         }

		char[] get_host_ip(){
			
			RunStatus s = run.execute("hostname --ip-address > out.txt")/* --ip-address*/ 
			File f = new File("out.txt", File.FILE_ACCESS_READ)

			char q[] = f.read(f.getSize())

			//q = stringUtil.explode(q, "\n\r")[0].string

			return	q
		
		}
		
		char[] get_var_name(char vnme[]){
		
			return	info.getVariable(vnme)
		}
	}